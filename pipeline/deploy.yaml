parameters:
- name: deploymentMode
  type: string
  default: 'Validate'
- name: serviceConnectionName
  type: string
- name: location
  type: string
- name: subscriptionID
  type: string
- name: bicepFile
  type: string
- name: coreRGName
  type: string
- name: resourceGroupName
  type: string
- name: vnetName
  type: string
- name: vnetPrefix
  type: string
- name: appSubnetName
  type: string
- name: appSubnetPrefix
  type: string
- name: dataSubnetName
  type: string
- name: dataSubnetPrefix
  type: string

jobs:
- job: '${{ parameters.deploymentMode }}'
  displayName: '${{ parameters.deploymentMode }}'
  steps:
  - download: current
    artifact: '$_(Build.DefinitionName)'
  - script: |
    pwd
    ls --recursive

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: '${{ parameters.deploymentMode }} resourceGroup.bicep'
    inputs:
      connectedServiceName: '{{ parameters.serviceConnectionName }}'
      location: '{{ parameters.location }}'
      deploymentScope: 'Subscription'
      subscriptionId: ${{ parameters.subscriptionID }}
      csmFile: './templates/resourceGroup.bicep'
      deploymentMode: ${{ parameters.deploymentMode }}
      overrideParameters: >
        -coreRGName ${{ parameters.coreRGName }}
        -location ${{ parameters.location }}

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: '${{ parameters.deploymentMode }} network.bicep'
    condition: and(succeeded(), ne('${{ parameters.deploymentMode }}', 'destroy'))
    inputs:
      connectedServiceName: '{{ parameters.serviceConnectionName }}'
      location: '{{ parameters.location }}'
      deploymentScope: 'Resource Group'
      resourceGroupName: ${{ parameters.coreRGName }}
      subscriptionId: ${{ parameters.subscriptionID }}
      csmFile: './templates/network.bicep'
      deploymentMode: ${{ parameters.deploymentMode }}
      overrideParameters: >
        -vnetName ${{ parameters.vnetName }}
        -location ${{ parameters.location }}
        -vnetPrefix ${{ parameters.vnetPrefix }}
        -appSubnetName ${{ parameters.appSubnetName }}
        -appSubnetPrefix ${{ parameters.appSubnetPrefix }}
        -dataSubnetName ${{ parameters.dataSubnetName }}
        -dataSubnetPrefix ${{ parameters.dataSubnetPrefix }}
