parameters:
- name: action
  displayName: action
  type: string
  default: plan
  values:
  - plan
  - apply
  - destroy


trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  group: Sandpit-Global

stages:
- stage: Build
  jobs:
  - job: generateTimestampTag
    displayName: 'Generate timestamp tag'
    steps:
    - checkout: self
    - script: echo "##vso[task.setvariable variable=timestampTag;]$(date +'%D %T')"

  - job: 'generateRepositoryTag'
    dependsOn: generateTimestampTag
    displayName: 'Generate repository tag'
    steps:
    - script: echo "##vso[task.setvariable variable=repositoryTag;]$(Build.Repository.Name)"

  - job: replaceTokens
    displayName: 'Replace Tokens'
    dependsOn:
      - generateTimestampTag
      - generateRepositoryTag
    steps:
    - task: qetza.replacetokens.replacetokens-task.replacetokens@6
      inputs:
        sources: '**/*.bicepparam'
        actionOnMissing: 'warn'
        tokenPrefix: '#{'
        tokenSuffix: '}#'
    - script: |
        echo printing bicepparam files...\n
        find . -name "*.bicepparam" -exec sh -c 'echo "##########\nFile: $1\n##########"; cat "$1"' sh {} \;
  
  - job: publishArtifacts
    displayName: 'Publish artifacts'
    dependsOn: replaceTokens
    steps:
    - publish: $(System.DefaultWorkingDirectory)/$(Build.Repository.Name)
      artifact: repo
  #     depends on (replace tokems, generate tags)
# - stage: Test
  # Validate 

# - stage: Plan
#   condition: and(succeeded(), eq({{ parameters.action }}, plan))
# - Stage: Apply
#   condition: and(succeeded(), eq({{ parameters.action }}, apply))

# - Stage: Destroy
#   condition: and(succeeded(), eq({{ parameters.action }}, destroy))
